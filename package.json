{
  "name": "chatterbot",
  "version": "0.2.0",
  "description": "Advanced Discord AI bot powered by Google Gemini.",
  "type": "module",
  "main": "dist/src/index.js",
  "scripts": {
    "build": "tsc -p tsconfig.json",
    "start": "node dist/src/index.js",
    "start:local": "NODE_ENV=development DISABLE_PRISMA_DB=true FEATURE_TEMPORAL=false FEATURE_QDRANT_VECTOR_DB=false FEATURE_VECTOR_MIGRATION_UTILS=false FEATURE_ADVANCED_FILTERING=false FEATURE_KNOWLEDGE_GRAPHS=false FEATURE_GRAPH_BASED_REASONING=false FEATURE_ENTITY_RELATIONSHIP_TRACKING=false FEATURE_GRAPH_QUERY_CAPABILITIES=false FEATURE_CRAWL4AI_WEB_ACCESS=false FEATURE_WEB_CONTENT_EXTRACTION=false FEATURE_URL_PROCESSING_SERVICE=false node dist/src/index.js",
    "dev": "tsx watch src/index.ts",
    "dev:local": "NODE_ENV=development DISABLE_PRISMA_DB=true FEATURE_TEMPORAL=false FEATURE_QDRANT_VECTOR_DB=false FEATURE_VECTOR_MIGRATION_UTILS=false FEATURE_ADVANCED_FILTERING=false FEATURE_KNOWLEDGE_GRAPHS=false FEATURE_GRAPH_BASED_REASONING=false FEATURE_ENTITY_RELATIONSHIP_TRACKING=false FEATURE_GRAPH_QUERY_CAPABILITIES=false FEATURE_CRAWL4AI_WEB_ACCESS=false FEATURE_WEB_CONTENT_EXTRACTION=false FEATURE_URL_PROCESSING_SERVICE=false tsx watch src/index.ts",
    "start:unified": "NODE_ENV=production FEATURE_UNIFIED_COGNITIVE_PIPELINE=true node dist/src/index.js",
    "dev:unified": "NODE_ENV=development FEATURE_UNIFIED_COGNITIVE_PIPELINE=true DISABLE_PRISMA_DB=true FEATURE_TEMPORAL=false FEATURE_QDRANT_VECTOR_DB=false FEATURE_VECTOR_MIGRATION_UTILS=false FEATURE_ADVANCED_FILTERING=false FEATURE_KNOWLEDGE_GRAPHS=false FEATURE_GRAPH_BASED_REASONING=false FEATURE_ENTITY_RELATIONSHIP_TRACKING=false FEATURE_GRAPH_QUERY_CAPABILITIES=false FEATURE_CRAWL4AI_WEB_ACCESS=false FEATURE_WEB_CONTENT_EXTRACTION=false FEATURE_URL_PROCESSING_SERVICE=false tsx watch src/index.ts",
    "dev:health": "tsx src/dev/health-dev.ts",
    "lint": "eslint src --ext .ts",
    "typecheck": "tsc --noEmit",
    "check:all": "npm run typecheck && npm run lint && npm test",
    "check:strict": "npm run typecheck && npm run lint && npm run test:coverage",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:ci": "jest --ci --coverage --watchAll=false",
    "test:detect": "jest --detectOpenHandles",
    "docker:build": "docker build -t chatterbot .",
    "docker:run": "docker run --rm -it -e DISCORD_TOKEN -e DISCORD_CLIENT_ID -e GEMINI_API_KEY chatterbot",
    "docker:up": "docker compose up -d --build",
    "docker:stop": "docker compose down",
    "docker:logs": "docker compose logs -f bot",
    "docker:ps": "docker compose ps",
    "deploy:prod": "npm run build && npm run docker:build && npm run docker:run",
    "deploy:analytics": "echo 'No docker-compose.yml in repo; use ENABLE_ANALYTICS_DASHBOARD to start built-in dashboard'",
    "db:migrate": "npx prisma migrate deploy",
    "db:studio": "npx prisma studio",
    "docs": "typedoc",
    "perf-cli": "tsx src/scripts/performance-cli.ts",
    "bench:rerank": "node scripts/rerank-bench.mjs",
    "eval": "promptfoo eval -c promptfooconfig.yaml --format json --output promptfoo-results.json",
    "eval:ci": "PROMPTFOO_DISABLE_TELEMETRY=1 PROMPTFOO_CACHE_PATH=.cache/promptfoo promptfoo eval -c promptfooconfig.yaml --format json --output promptfoo-results.json --fail-on-error",
    "prepare": "husky install",
    "setup": "node scripts/setup-wizard.mjs",
    "security:check": "NODE_OPTIONS=\"\" npm audit",
    "security:fix": "NODE_OPTIONS=\"\" npm audit fix --legacy-peer-deps",
    "security:report": "./scripts/security-fix.sh",
    "env:fix": "./scripts/fix-node-env.sh",
    "db:upsert-decision-overrides": "node scripts/upsert-guild-decision-overrides.mjs",
    "validate:production": "node scripts/production-validation.js",
    "config:check": "node scripts/production-validation.js",
    "health:check": "curl -f http://localhost:${HEALTH_CHECK_PORT:-3000}/health || echo 'Health check failed'",
    "performance:test": "echo 'Performance testing requires running service'",
    "load:test": "echo 'Load testing requires running service'",
    "demo:perf-routing": "tsx src/scripts/perf-routing-demo.ts"
  },
  "lint-staged": {
    "*.{ts,tsx,js,jsx,cts,mts,cjs,mjs}": [
      "eslint --fix"
    ],
    "*.{json,md,yml,yaml,css,scss,ts,tsx,js,jsx,cts,mts,cjs,mjs}": [
      "prettier --write"
    ]
  },
  "dependencies": {
    "@ai-sdk/anthropic": "^2.0.2",
    "@ai-sdk/google": "^2.0.5",
    "@ai-sdk/openai": "^2.0.11",
    "@anthropic-ai/sdk": "^0.59.0",
    "@dqbd/tiktoken": "^1.0.22",
    "@elevenlabs/elevenlabs-js": "^2.9.0",
    "@google/generative-ai": "^0.7.1",
    "@langchain/anthropic": "^0.3.26",
    "@langchain/core": "^0.3.69",
    "@langchain/langgraph": "^0.4.4",
    "@langchain/openai": "^0.6.7",
    "@mistralai/mistralai": "^1.1.0",
    "@modelcontextprotocol/sdk": "^1.15.0",
    "@modelcontextprotocol/server-brave-search": "^0.6.2",
    "@modelcontextprotocol/server-sequential-thinking": "^2025.7.1",
    "@opentelemetry/api": "^1.8.0",
    "@opentelemetry/auto-instrumentations-node": "^0.55.0",
    "@opentelemetry/exporter-trace-otlp-http": "^0.55.0",
    "@opentelemetry/sdk-node": "^0.55.0",
    "@prisma/client": "^6.13.0",
    "@qdrant/js-client-rest": "^1.15.1",
    "@temporalio/client": "^1.12.1",
    "@temporalio/worker": "^1.12.1",
    "@temporalio/workflow": "^1.12.1",
    "@tensorflow/tfjs": "^4.22.0",
    "@tensorflow/tfjs-node": "^4.22.0",
    "@types/pg": "^8.15.5",
    "ai": "^5.0.11",
    "axios": "^1.10.0",
    "bcrypt": "^6.0.0",
    "cohere-ai": "^7.7.0",
    "crawl4ai": "^1.0.1",
    "discord.js": "^14.14.1",
    "dotenv": "^16.3.1",
    "gpt-tokenizer": "^2.7.0",
    "groq-sdk": "^0.6.0",
    "langfuse": "^3.38.4",
    "lodash": "^4.17.21",
    "neo4j-driver": "^5.28.1",
    "node-cron": "^4.2.1",
    "openai": "^5.12.2",
    "pg": "^8.16.3",
    "prisma": "^6.13.0",
    "redis": "^4.7.0",
    "sanitize-html": "^2.17.0",
    "socket.io": "^4.8.1",
    "zod": "^3.25.76"
  },
  "devDependencies": {
    "@commitlint/cli": "^19.5.0",
    "@commitlint/config-conventional": "^19.5.0",
    "@types/bcrypt": "^6.0.0",
    "@types/jest": "^29.5.14",
    "@types/lodash": "^4.17.20",
    "@types/node": "^24.2.1",
    "@types/sanitize-html": "^2.16.0",
    "@typescript-eslint/eslint-plugin": "^7.18.0",
    "@typescript-eslint/parser": "^7.18.0",
    "eslint": "^8.55.0",
    "fast-check": "^4.2.0",
    "husky": "^9.1.6",
    "jest": "^29.7.0",
    "lint-staged": "^15.2.10",
    "prettier": "^3.3.3",
    "promptfoo": "^0.108.0",
    "ts-jest": "^29.4.1",
    "ts-node": "^10.9.2",
    "tsx": "^4.6.0",
    "typedoc": "^0.28.0",
    "typescript": "^5.9.2"
  },
  "engines": {
    "node": ">=18.0.0"
  }
}
